apiVersion: v1
kind: Namespace
metadata:
  name: code-review
---
apiVersion: v1
kind: Secret
metadata:
  name: llm-secrets
  namespace: code-review
type: Opaque
data:
  # Base64 encoded values - replace with your actual encoded secrets
  gemini-api-key: eW91cl9nZW1pbmlfYXBpX2tleV9oZXJl  # your_gemini_api_key_here
  openai-api-key: eW91cl9vcGVuYWlfYXBpX2tleV9oZXJl  # your_openai_api_key_here
  jwt-secret: eW91cl9qd3Rfc2VjcmV0X2tleV9oZXJl      # your_jwt_secret_key_here
  api-key-salt: eW91cl9hcGlfa2V5X3NhbHRfaGVyZQ==    # your_api_key_salt_here
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: code-review-config
  namespace: code-review
data:
  HOST: "0.0.0.0"
  PORT: "8000"
  DEBUG: "false"
  LLM_PROVIDER: "gemini"
  MAX_FILE_SIZE_MB: "10"
  RATE_LIMIT_REQUESTS_PER_MINUTE: "10"
  CORS_ENABLED: "false"
  ALLOWED_ORIGINS: "https://yourdomain.com"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: code-review-uploads
  namespace: code-review
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: code-review-reports
  namespace: code-review
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: code-review-assistant
  namespace: code-review
  labels:
    app: code-review-assistant
spec:
  replicas: 3
  selector:
    matchLabels:
      app: code-review-assistant
  template:
    metadata:
      labels:
        app: code-review-assistant
    spec:
      containers:
      - name: code-review-assistant
        image: code-review-assistant:latest
        ports:
        - containerPort: 8000
          name: http
        envFrom:
        - configMapRef:
            name: code-review-config
        env:
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: llm-secrets
              key: gemini-api-key
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: llm-secrets
              key: openai-api-key
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: llm-secrets
              key: jwt-secret
        - name: API_KEY_SALT
          valueFrom:
            secretKeyRef:
              name: llm-secrets
              key: api-key-salt
        volumeMounts:
        - name: uploads-storage
          mountPath: /app/uploads
        - name: reports-storage
          mountPath: /app/reports
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
      volumes:
      - name: uploads-storage
        persistentVolumeClaim:
          claimName: code-review-uploads
      - name: reports-storage
        persistentVolumeClaim:
          claimName: code-review-reports
      securityContext:
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: code-review-assistant-service
  namespace: code-review
  labels:
    app: code-review-assistant
spec:
  selector:
    app: code-review-assistant
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
    name: http
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: code-review-assistant-ingress
  namespace: code-review
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "10"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
spec:
  tls:
  - hosts:
    - api.yourdomain.com
    secretName: code-review-tls
  rules:
  - host: api.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: code-review-assistant-service
            port:
              number: 80
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: code-review-assistant-pdb
  namespace: code-review
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: code-review-assistant
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: code-review-assistant-hpa
  namespace: code-review
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: code-review-assistant
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80